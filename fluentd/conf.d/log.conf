<filter app.**>
  @type record_transformer
  <record>
    random "#{rand}"
  </record>
</filter>

<match app.**>
  @type copy
  <store>
    @type rewrite_tag_filter
    <rule>
      key request_id
      pattern //
      tag finish.logs
    </rule>
  </store>
  <store>
    @type rewrite_tag_filter
    <rule>
      key messages
      pattern /\A  Rendered \S+/
      tag duration.Views
    </rule>
    <rule>
      key messages
      pattern /\A  (?!CACHE )(?:[A-Z]\w+(?:::[A-Z]\w+)* (?:Load|Create|Update|Destroy)(?: All)?)? \(\d+\.\d+ms\)  /
      tag duration.ActiveRecord
    </rule>
  </store>
</match>

<filter duration.**>
  @type grep
  <regexp>
    key messages
    pattern /\A  .*\(\d+\.\d+ms\)/
  </regexp>
</filter>

<filter duration.Views.**>
  @type parser
  key_name messages
  reserve_time true
  reserve_data true
  <parse>
    @type regexp
    expression /\A  Rendered (?<target>\S+)/
  </parse>
</filter>

<filter duration.ActiveRecord.**>
  @type parser
  key_name messages
  reserve_time true
  reserve_data true
  <parse>
    @type regexp
    expression /\A  (?<target>\S*)/
  </parse>
</filter>

<filter duration.ActiveRecord.**>
  @type record_transformer
  <replace>
    key target
    expression /\A\z/
    replace SQL
  </replace>
</filter>

<filter duration.**>
  @type parser
  key_name messages
  reserve_time true
  reserve_data true
  <parse>
    @type regexp
    expression /\A  .*\((?<duration>\d+\.\d+)ms\)/
    types duration:float
  </parse>
</filter>

<match duration.**>
  @type rewrite_tag_filter
  <rule>
    key request_id
    pattern //
    tag finish.log_durations
  </rule>
</match>

<match finish.**>
  @type relabel
  @label @OUTPUT
  @id log_finish
</match>
